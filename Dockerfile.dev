ARG RUBY_VERSION=3.2.2
ARG DB_USER=postgres
ARG DB_PASSWORD=password
ARG RAILS_MASTER_KEY
FROM ruby:3.2.2-slim-bullseye as base
LABEL maintaner "Asyraf <asyrafasch@gmail.com>"

# root path
WORKDIR /app

ENV RAILS_ENV="production" \
    BUNDLE_DEPLOYMENT="1" \
    BUNDLE_PATH="/usr/local/bundle" \
    BUNDLE_WITHOUT="development"

# Throw-away build stage to reduce size of final image
FROM base as build

# Install packages needed to build gems
# RUN apt-get update -qq --fix-missing && apt-get install -qq -y apt-transport-https 
RUN apt-get update -qq --fix-missing && \
    apt-get install -qq -y --fix-missing --no-install-recommends \
    build-essential curl git libpq-dev libvips42 pkg-config

# Install application gems
COPY Gemfile Gemfile.lock ./
RUN bundle install && \
    rm -rf ~/.bundle/ "${BUNDLE_PATH}"/ruby/*/cache "${BUNDLE_PATH}"/ruby/*/bundler/gems/*/.git && \
    bundle exec bootsnap precompile --gemfile

# Copy application code
COPY . .

# Precompile bootsnap code for faster boot times
RUN bundle exec bootsnap precompile app/ lib/



# Final stage for app image
FROM base

# Install packages needed for deployment
RUN apt-get update -qq && \
    apt-get install -qq -y --no-install-recommends postgresql-client && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Copy built artifacts: gems, application
COPY --from=build /usr/local/bundle /usr/local/bundle
COPY --from=build /app /app

WORKDIR /app

# Run and own only the runtime files as a non-root user for security
RUN useradd app --create-home --shell /bin/bash && \
    chown -R app:app db log storage tmp
USER app:app

# Entrypoint prepares the database.
ENTRYPOINT ["/app/bin/docker-entrypoint"]

# Start the server by default, this can be overwritten at runtime
EXPOSE 3000
CMD ["./bin/rails", "server"]
